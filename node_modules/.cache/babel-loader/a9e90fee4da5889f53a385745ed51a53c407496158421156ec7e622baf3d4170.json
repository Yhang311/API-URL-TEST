{"ast":null,"code":"var _jsxFileName = \"/Users/yanghang/test/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null); // 用于存储错误信息\n\n  const handleClick = async () => {\n    try {\n      // 发起网络请求（确保 URL 正确）\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n      if (!response.ok) {\n        throw new Error(`网络请求失败，状态码：${response.status}`);\n      }\n\n      // 检查返回数据是否为 JSON 格式\n      const result = await response.json();\n      setData(result);\n      setError(null); // 清除之前的错误信息\n    } catch (err) {\n      console.error('请求错误:', err);\n      setError(err.message); // 捕获并设置错误信息\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"\\u83B7\\u53D6\\u6570\\u636E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u83B7\\u53D6\\u5230\\u7684\\u6570\\u636E\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), data ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"\\u8BF7\\u6C42\\u51FA\\u9519: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u5C1A\\u672A\\u83B7\\u53D6\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iQX+4OAhA5+VU/aNcdxshMNE96c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","data","setData","error","setError","handleClick","response","fetch","ok","Error","status","result","json","err","console","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","style","color","_c","$RefreshReg$"],"sources":["/Users/yanghang/test/react-test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null); // 用于存储错误信息\n\n  const handleClick = async () => {\n    try {\n      // 发起网络请求（确保 URL 正确）\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n      \n      if (!response.ok) {\n        throw new Error(`网络请求失败，状态码：${response.status}`);\n      }\n\n      // 检查返回数据是否为 JSON 格式\n      const result = await response.json();\n      setData(result);\n      setError(null); // 清除之前的错误信息\n    } catch (err) {\n      console.error('请求错误:', err);\n      setError(err.message); // 捕获并设置错误信息\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleClick}>获取数据</button>\n      \n      <div>\n        <h3>获取到的数据：</h3>\n        {data ? (\n          <pre>{JSON.stringify(data, null, 2)}</pre>\n        ) : error ? (\n          <p style={{ color: 'red' }}>请求出错: {error}</p>\n        ) : (\n          <p>尚未获取数据</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAE1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAClD;;MAEA;MACA,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MACpCV,OAAO,CAACS,MAAM,CAAC;MACfP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACX,KAAK,CAAC,OAAO,EAAEU,GAAG,CAAC;MAC3BT,QAAQ,CAACS,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAQmB,OAAO,EAAEZ,WAAY;MAAAW,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3CvB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACfpB,IAAI,gBACHH,OAAA;QAAAkB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACtB,IAAI,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GACxClB,KAAK,gBACPL,OAAA;QAAG0B,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAT,QAAA,GAAC,4BAAM,EAACb,KAAK;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAE7CvB,OAAA;QAAAkB,QAAA,EAAG;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAvCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}