{"ast":null,"code":"var _jsxFileName = \"/Users/yanghang/test/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport fetch_token from './fetch_token.js'; // 导入 fetch_token 函数\nimport fetch_calendar from './calendar.js'; // 导入 fetch_calendar 函数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const username = \"test08\"; // 假设的用户名\n  const team = \"김천\"; // 假设的团队名\n  const [token, setToken] = useState('');\n  const [calendarData, setCalendarData] = useState(null); // 使用 null 代替字符串，以便于判断\n\n  useEffect(() => {\n    const getTokenInfo = async () => {\n      // 先检查 localStorage 中是否有 token\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        setToken(storedToken);\n      } else {\n        // 如果没有 token，调用 fetch_token 获取\n        const fetchedToken = await fetch_token(username, team);\n        if (fetchedToken) {\n          setToken(fetchedToken);\n          localStorage.setItem('token', fetchedToken); // 存储 token\n        }\n      }\n    };\n    getTokenInfo(); // 调用获取 token 的函数\n  }, []); // 只在组件挂载时调用\n\n  useEffect(() => {\n    const getCalendarInfo = async () => {\n      if (token) {\n        // 当 token 可用时才调用\n        try {\n          const data = await fetch_calendar(token); // 等待 fetch_calendar 的结果\n          setCalendarData(data); // 设置日历数据\n        } catch (error) {\n          console.error(\"Error fetching calendar data:\", error);\n          setCalendarData(null); // 如果出错，设置为 null\n        }\n      }\n    };\n    getCalendarInfo();\n  }, [token]); // 当 token 更新时调用\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Token: \", token || \"No token available\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Past Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: calendarData ? JSON.stringify(calendarData, null, 2) : \"No calendar data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SDAUHbX4P7hFRn82XcmaMpeNEZY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetch_token","fetch_calendar","jsxDEV","_jsxDEV","App","_s","username","team","token","setToken","calendarData","setCalendarData","getTokenInfo","storedToken","localStorage","getItem","fetchedToken","setItem","getCalendarInfo","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/yanghang/test/react-test/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fetch_token from './fetch_token.js'; // 导入 fetch_token 函数\nimport fetch_calendar from './calendar.js'; // 导入 fetch_calendar 函数\n\nconst App = () => {\n  const username = \"test08\"; // 假设的用户名\n  const team = \"김천\"; // 假设的团队名\n  const [token, setToken] = useState('');\n  const [calendarData, setCalendarData] = useState(null); // 使用 null 代替字符串，以便于判断\n\n  useEffect(() => {\n    const getTokenInfo = async () => {\n      // 先检查 localStorage 中是否有 token\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        setToken(storedToken);\n      } else {\n        // 如果没有 token，调用 fetch_token 获取\n        const fetchedToken = await fetch_token(username, team);\n        if (fetchedToken) {\n          setToken(fetchedToken);\n          localStorage.setItem('token', fetchedToken); // 存储 token\n        }\n      }\n    };\n\n    getTokenInfo(); // 调用获取 token 的函数\n  }, []); // 只在组件挂载时调用\n\n  useEffect(() => {\n    const getCalendarInfo = async () => {\n      if (token) { // 当 token 可用时才调用\n        try {\n          const data = await fetch_calendar(token); // 等待 fetch_calendar 的结果\n          setCalendarData(data); // 设置日历数据\n        } catch (error) {\n          console.error(\"Error fetching calendar data:\", error);\n          setCalendarData(null); // 如果出错，设置为 null\n        }\n      }\n    };\n\n    getCalendarInfo(); \n  }, [token]); // 当 token 更新时调用\n\n  return (\n    <div>\n      <h3>Information</h3>\n      <p>Token: {token || \"No token available\"}</p>\n\n      <h3>Past Events</h3>\n      <pre>{calendarData ? JSON.stringify(calendarData, null, 2) : \"No calendar data available\"}</pre>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,kBAAkB,CAAC,CAAC;AAC5C,OAAOC,cAAc,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAG,QAAQ,CAAC,CAAC;EAC3B,MAAMC,IAAI,GAAG,IAAI,CAAC,CAAC;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B;MACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACjD,IAAIF,WAAW,EAAE;QACfJ,QAAQ,CAACI,WAAW,CAAC;MACvB,CAAC,MAAM;QACL;QACA,MAAMG,YAAY,GAAG,MAAMhB,WAAW,CAACM,QAAQ,EAAEC,IAAI,CAAC;QACtD,IAAIS,YAAY,EAAE;UAChBP,QAAQ,CAACO,YAAY,CAAC;UACtBF,YAAY,CAACG,OAAO,CAAC,OAAO,EAAED,YAAY,CAAC,CAAC,CAAC;QAC/C;MACF;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERd,SAAS,CAAC,MAAM;IACd,MAAMoB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAIV,KAAK,EAAE;QAAE;QACX,IAAI;UACF,MAAMW,IAAI,GAAG,MAAMlB,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC;UAC1CG,eAAe,CAACQ,IAAI,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrDT,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACzB;MACF;IACF,CAAC;IAEDO,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBvB,OAAA;MAAAmB,QAAA,GAAG,SAAO,EAACd,KAAK,IAAI,oBAAoB;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7CvB,OAAA;MAAAmB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBvB,OAAA;MAAAmB,QAAA,EAAMZ,YAAY,GAAGiB,IAAI,CAACC,SAAS,CAAClB,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;IAA4B;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7F,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlDID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}