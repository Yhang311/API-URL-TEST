{"ast":null,"code":"var _jsxFileName = \"/Users/yanghang/test/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport fetch_token from './fetch_token.js'; // 导入 fetch_token 函数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const username = \"test06\"; // 假设的用户名\n  const team = \"김천\"; // 假设的团队名\n  const [token, setToken] = useState('');\n\n  // useEffect(() => {\n  //   const getTokenInfo = async () => {\n  //     const fetchedToken = await fetch_token(username, team); // 获取 token\n  //     if (fetchedToken) {\n  //       setToken(fetchedToken); // 设置 token 状态\n  //     } else {\n  //         // 无 token 情况\n  //     }\n  //   };\n\n  //   getTokenInfo(); // 调用获取 token 的函数\n  // }, []); // 只在组件挂载时调用\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Token: \", fetch_token(username, team)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Past Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ASU5DC/3PNAtDu6g7HTvQX3bJZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetch_token","jsxDEV","_jsxDEV","App","_s","username","team","token","setToken","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yanghang/test/react-test/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fetch_token from './fetch_token.js'; // 导入 fetch_token 函数\n\nconst App = () => {\n  const username = \"test06\"; // 假设的用户名\n  const team = \"김천\"; // 假设的团队名\n  const [token, setToken] = useState('');\n\n  // useEffect(() => {\n  //   const getTokenInfo = async () => {\n  //     const fetchedToken = await fetch_token(username, team); // 获取 token\n  //     if (fetchedToken) {\n  //       setToken(fetchedToken); // 设置 token 状态\n  //     } else {\n  //         // 无 token 情况\n  //     }\n  //   };\n\n  //   getTokenInfo(); // 调用获取 token 的函数\n  // }, []); // 只在组件挂载时调用\n\n  return (\n    <div>\n      <h3>Information</h3>\n      <p>Token: {fetch_token(username, team)}</p>\n\n      <h3>Past Events</h3>\n      {/* 在这里可以添加其他的组件或逻辑来处理过去的事件 */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAG,QAAQ,CAAC,CAAC;EAC3B,MAAMC,IAAI,GAAG,IAAI,CAAC,CAAC;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACEG,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBX,OAAA;MAAAO,QAAA,GAAG,SAAO,EAACT,WAAW,CAACK,QAAQ,EAAEC,IAAI,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3CX,OAAA;MAAAO,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEV,CAAC;AAACT,EAAA,CA3BID,GAAG;AAAAW,EAAA,GAAHX,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}