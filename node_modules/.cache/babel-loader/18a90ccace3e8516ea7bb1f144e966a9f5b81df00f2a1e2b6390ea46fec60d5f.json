{"ast":null,"code":"var _jsxFileName = \"/Users/yanghang/test/react-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport fetch_token from './fetch_token.js'; // 导入 fetch_token 函数\n//import fetch_calendar from './calendar.js'; // 导入 fetch_calendar 函数\n//import {getToken} from './get_token.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const username = \"test01\";\n  const team = \"김천\";\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    const getTokenInfo = async () => {\n      const fetchedToken = await fetch_token(username, team); // 获取 token\n      if (fetchedToken) {\n        setToken(fetchedToken); // 设置 token 状态\n      } else {\n        setToken('No token available'); // 无 token 情况\n      }\n    };\n    getTokenInfo(); // 调用获取 token 的函数\n  }, []); // 只在组件挂载时调用\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Token: \", token || \"No token available\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Past Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"50KgU0FyaePkCSEmffXXaPEP+cI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetch_token","jsxDEV","_jsxDEV","App","_s","username","team","token","setToken","getTokenInfo","fetchedToken","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yanghang/test/react-test/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fetch_token from './fetch_token.js'; // 导入 fetch_token 函数\n//import fetch_calendar from './calendar.js'; // 导入 fetch_calendar 函数\n//import {getToken} from './get_token.js';\n\n\nconst App = () => {\n\n  const username = \"test01\";\n  const team = \"김천\";\n  const [token,setToken] = useState('');\n\n  useEffect(() => {\n    const getTokenInfo = async () => {\n      const fetchedToken = await fetch_token(username, team); // 获取 token\n      if (fetchedToken) {\n        setToken(fetchedToken); // 设置 token 状态\n      } else {\n        setToken('No token available'); // 无 token 情况\n      }\n    };\n\n    getTokenInfo(); // 调用获取 token 的函数\n  }, []); // 只在组件挂载时调用\n\n\n    return (\n        <div>\n            <h3>Information</h3>\n            <p>Token: {token || \"No token available\"}</p>\n\n            <h3>Past Events</h3>\n         \n        </div>\n    );\n\n  }\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,kBAAkB,CAAC,CAAC;AAC5C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,QAAQ,GAAG,QAAQ;EACzB,MAAMC,IAAI,GAAG,IAAI;EACjB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,YAAY,GAAG,MAAMV,WAAW,CAACK,QAAQ,EAAEC,IAAI,CAAC,CAAC,CAAC;MACxD,IAAII,YAAY,EAAE;QAChBF,QAAQ,CAACE,YAAY,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLF,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;MAClC;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGN,oBACIP,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBb,OAAA;MAAAS,QAAA,GAAG,SAAO,EAACJ,KAAK,IAAI,oBAAoB;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7Cb,OAAA;MAAAS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAGZ,CAAC;AAAAX,EAAA,CA9BGD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}