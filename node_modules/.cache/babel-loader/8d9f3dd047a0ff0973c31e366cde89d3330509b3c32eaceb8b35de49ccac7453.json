{"ast":null,"code":"var _jsxFileName = \"/Users/yanghang/test/react-test/src/App.js\";\nimport React, { useState } from 'react';\nimport token_info from './token_info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [data, setData] = useState(null);\n  // const [error, setError] = useState(null); \n\n  // const handleClick = async () => {\n  //   try {\n  //     //const response = await fetch('https://jsonplaceholder.typicode.com/posts');//온라인에서 찾은 테스트 API URL  \n  //     const response = await fetch('http://220.88.39.23:5000/api/user/token?username=awdfsv&team=%EC%9A%B8%EC%82%B0');//우리의 API URL\n\n  //     if (!response.ok) {\n  //       throw new Error(`网络请求失败，状态码：${response.status}`);\n  //     }\n  //     const result = await response.json(); \n  //     setData(result);\n  //     setError(null); \n  //   } catch (err) {\n  //     console.error('error:', err);\n  //     setError(err.message); \n  //   }\n  // };\n\n  const username = \"1245219\";\n  token_info(username, \"울산\");\n  const Token = localStorage.getItem(\"${username}_access_token\");\n  const message = localStorage.getItem(\"${username}_amsg\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Get info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Information \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"Token message\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","token_info","jsxDEV","_jsxDEV","App","username","Token","localStorage","getItem","message","children","onClick","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yanghang/test/react-test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport token_info from './token_info';\n\nfunction App() {\n  // const [data, setData] = useState(null);\n  // const [error, setError] = useState(null); \n\n  // const handleClick = async () => {\n  //   try {\n  //     //const response = await fetch('https://jsonplaceholder.typicode.com/posts');//온라인에서 찾은 테스트 API URL  \n  //     const response = await fetch('http://220.88.39.23:5000/api/user/token?username=awdfsv&team=%EC%9A%B8%EC%82%B0');//우리의 API URL\n      \n  //     if (!response.ok) {\n  //       throw new Error(`网络请求失败，状态码：${response.status}`);\n  //     }\n  //     const result = await response.json(); \n  //     setData(result);\n  //     setError(null); \n  //   } catch (err) {\n  //     console.error('error:', err);\n  //     setError(err.message); \n  //   }\n  // };\n\n  const username = \"1245219\"\n  token_info(username,\"울산\")\n  const Token =localStorage.getItem(\"${username}_access_token\");\n  const message = localStorage.getItem(\"${username}_amsg\");\n\n\n\n  return (\n    <div>\n      <button onClick={handleClick}>Get info</button>\n      \n      <div>\n        <h3>Information </h3>\n        Token\n        message\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAG,SAAS;EAC1BJ,UAAU,CAACI,QAAQ,EAAC,IAAI,CAAC;EACzB,MAAMC,KAAK,GAAEC,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC;EAC7D,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;EAIxD,oBACEL,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAQQ,OAAO,EAAEC,WAAY;MAAAF,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/Cb,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,iBAGvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAvCQb,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}